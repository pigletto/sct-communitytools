# Generated by Django 2.0.7 on 2018-07-16 20:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('community', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BoardUserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signature', models.TextField(default='', verbose_name='Signature')),
                ('markup', models.CharField(choices=[('bbcode', 'BBCode')], max_length=250, null=True, verbose_name='Markup')),
                ('default_notifyme_value', models.NullBooleanField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, unique=True)),
            ],
            options={
                'verbose_name': 'Board user profile',
                'verbose_name_plural': 'Board user profiles',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True)),
                ('allowview', models.IntegerField(choices=[(-1, 'All Users'), (0, 'Loggedin Users'), (1, 'Members of the Group'), (2, 'Staff Members'), (3, 'Nobody')], default=-1)),
                ('allowthreads', models.IntegerField(choices=[(-1, 'All Users'), (0, 'Loggedin Users'), (1, 'Members of the Group'), (2, 'Staff Members'), (3, 'Nobody')], default=0)),
                ('allowreplies', models.IntegerField(choices=[(-1, 'All Users'), (0, 'Loggedin Users'), (1, 'Members of the Group'), (2, 'Staff Members'), (3, 'Nobody')], default=0)),
                ('sortorder', models.IntegerField(default=0)),
                ('slug', models.CharField(db_index=True, max_length=250, unique=True)),
                ('category_type', models.CharField(blank=True, db_index=True, max_length=250)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='community.Group')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='sphboard.Category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['sortorder'],
            },
        ),
        migrations.CreateModel(
            name='CategoryLastVisit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lastvisit', models.DateTimeField(default=django.utils.timezone.now)),
                ('oldlastvisit', models.DateTimeField(null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sphboard.Category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Category last visit',
                'verbose_name_plural': 'Category last visits',
            },
        ),
        migrations.CreateModel(
            name='ExtendedCategoryConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_label', models.CharField(blank=True, max_length=250)),
                ('body_label', models.CharField(blank=True, max_length=250)),
                ('body_initial', models.TextField(blank=True)),
                ('body_help_text', models.TextField(blank=True)),
                ('post_new_thread_label', models.CharField(blank=True, max_length=250)),
                ('above_thread_list_block', models.TextField(blank=True, help_text='HTML which will be displayed above the thread list.')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sphboard.Category', unique=True)),
            ],
            options={
                'verbose_name': 'Extended category config',
                'verbose_name_plural': 'Extended category configs',
            },
        ),
        migrations.CreateModel(
            name='Monitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sphboard.Category', verbose_name='Category')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community.Group', verbose_name='Group')),
            ],
            options={
                'verbose_name': 'Monitor',
                'verbose_name_plural': 'Monitors',
            },
        ),
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=250)),
                ('choices_per_user', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Poll',
                'verbose_name_plural': 'Polls',
            },
        ),
        migrations.CreateModel(
            name='PollChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice', models.CharField(max_length=250)),
                ('count', models.IntegerField()),
                ('sortorder', models.IntegerField(default=0)),
                ('poll', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='sphboard.Poll')),
            ],
            options={
                'verbose_name': 'Poll choice',
                'verbose_name_plural': 'Poll choices',
                'ordering': ['sortorder'],
            },
        ),
        migrations.CreateModel(
            name='PollVoters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='sphboard.PollChoice')),
                ('poll', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='sphboard.Poll')),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Poll voter',
                'verbose_name_plural': 'Poll voters',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(default=0, editable=False)),
                ('subject', models.CharField(max_length=250)),
                ('body', models.TextField()),
                ('postdate', models.DateTimeField(auto_now_add=True)),
                ('markup', models.CharField(choices=[('bbcode', 'BBCode')], max_length=250, null=True)),
                ('is_hidden', models.IntegerField(db_index=True, default=0, editable=False)),
                ('author', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sphboard_post_author_set', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='sphboard.Category')),
                ('thread', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='sphboard.Post')),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
            },
            managers=[
                ('allobjects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='PostAnnotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField()),
                ('created', models.DateTimeField()),
                ('hide_post', models.BooleanField()),
                ('markup', models.CharField(choices=[('bbcode', 'BBCode')], max_length=250, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annotation', to='sphboard.Post', unique=True)),
            ],
            options={
                'verbose_name': 'Post annotation',
                'verbose_name_plural': 'Post annotations',
            },
        ),
        migrations.CreateModel(
            name='PostAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fileupload', models.FileField(blank=True, max_length=200, upload_to=None, verbose_name='File')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='sphboard.Post')),
            ],
            options={
                'verbose_name': 'Post attachment',
                'verbose_name_plural': 'Post attachments',
            },
        ),
        migrations.CreateModel(
            name='ThreadInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thread_type', models.IntegerField(choices=[(1, 'Default'), (2, 'Moved Thread')])),
                ('heat', models.IntegerField(db_index=True, default=0)),
                ('heat_calculated', models.DateTimeField(null=True)),
                ('sticky_value', models.IntegerField(db_index=True, default=0)),
                ('post_count', models.IntegerField(default=0)),
                ('view_count', models.IntegerField(default=0)),
                ('thread_latest_postdate', models.DateTimeField(db_index=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sphboard.Category')),
                ('latest_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thread_latest_set', to='sphboard.Post')),
                ('root_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sphboard.Post')),
            ],
            options={
                'verbose_name': 'Thread information',
                'verbose_name_plural': 'Thread informations',
            },
        ),
        migrations.CreateModel(
            name='ThreadLastVisit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lastvisit', models.DateTimeField(default=django.utils.timezone.now)),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sphboard.Post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Thread last visit',
                'verbose_name_plural': 'Thread last visits',
            },
        ),
        migrations.CreateModel(
            name='UserPostCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_count', models.IntegerField(default=0)),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='community.Group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User post count',
                'verbose_name_plural': 'User post counts',
            },
        ),
        migrations.AddField(
            model_name='poll',
            name='post',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='sphboard.Post'),
        ),
        migrations.AddField(
            model_name='monitor',
            name='thread',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sphboard.Post', verbose_name='Thread'),
        ),
        migrations.AddField(
            model_name='monitor',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AlterUniqueTogether(
            name='userpostcount',
            unique_together={('user', 'group')},
        ),
        migrations.AlterUniqueTogether(
            name='threadlastvisit',
            unique_together={('user', 'thread')},
        ),
        migrations.AlterUniqueTogether(
            name='categorylastvisit',
            unique_together={('user', 'category')},
        ),
    ]
